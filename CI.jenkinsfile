pipeline{
  agent {
        label 'master'
    }
  parameters{
        string(name:'ApplicationName', defaultValue: 'billing', description: 'Application name')
        string(name:'VersionNumber', defaultValue:"default", description: "Application Version Number")
   }
  
   stages{
        stage('Deploy Applications'){
                steps{
                        script{
		 	      if("${params.ApplicationName}" == "Billing"){
                              		git url: "https://github.com/nddeshmukh1610/billing.git", branch: 'master'
                               		sh 'sudo cp ${WORKSPACE}/index.html /var/www/html'
	                       }
                               else if("${params.ApplicationName}" == "testapp"){
                                        git url: "https://github.com/nddeshmukh1610/testapp.git", branch: 'master'
                                        sh 'sudo cp ${WORKSPACE}/index.html /var/www/html'
	                       }
                               else {
			                println "Provided Application is not provisioned, You can deploy below applications"
					println "1) Billing"
					println "2) testapp"
	                       }
                         }
                    }
         }
        stage('Test Application'){
                agent { label 'windows' }
		environment { 
		 	   def appName = "${params.ApplicationName}"
     			   APP_NAME = "\"Projects\\$appName\""
    		}	
                steps{
                        script{
                                git url: "https://github.com/nddeshmukh1610/dev-test-tool.git", branch: 'master'
				fileOperations([folderCopyOperation(destinationFolderPath: "C:\\Jenkins\\workspace\\CI_Pipeline\\Test\\", sourceFolderPath: "C:\\Jenkins\\workspace\\CI_Pipeline\\"/${params.ApplicationName}"/\/\")])

                              	
				
                      }
                    }
         }
		 
   }
}

